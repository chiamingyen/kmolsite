<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>kmolsite</title><link href="http://chiamingyen.github.io/kmolsite/blog/" rel="alternate"></link><link href="http://chiamingyen.github.io/kmolsite/blog/feeds/onshape.atom.xml" rel="self"></link><id>http://chiamingyen.github.io/kmolsite/blog/</id><updated>2015-12-26T13:06:46+08:00</updated><entry><title>Right MCAD for the 21 century</title><link href="http://chiamingyen.github.io/kmolsite/blog/right-mcad-for-the-21-century.html" rel="alternate"></link><updated>2015-12-26T13:06:46+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2015-12-26:kmolsite/blog/right-mcad-for-the-21-century.html</id><summary type="html">&lt;p&gt;真正屬於二十一世紀的電腦輔助機械設計軟體: &lt;a href="http://www.onshape.com"&gt;http://www.onshape.com&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;西元 2000 年, 當時的 PTC 公司在著名的 Pro/Engineer 套件中加入 Pro/Web.Link, 當時的 Javascript 技術在 Java 強力橫掃程式界的時候, 還是得透過呼叫 Java 程式庫, 才能夠運行, 但是能夠在嵌入式 Internet Explorer 與 Firefox 瀏覽器中運行的半調子 Engineer to Engineer  二次開發技術, 仍然讓人眼睛為之一亮.&lt;/p&gt;
&lt;p&gt;十幾年過去, 採用 Javascript 技術的 Pro/Web.Link 仍然停留在原地, 沒給隨後改名為 Creo Parametric 的參數化模組, 帶來令人振奮的應用, 但是 Javascript 技術自從 2009 年 node.js 發表以來, 就不斷在全球資訊網的前後端環境嚴密整合下, 持續發光發熱, 加上 HTML5 (2010)、WebGL (2009) 與 Git (2005) 技術的推波助瀾, 終於讓 Onshape: &lt;a href="http://www.onshape.com"&gt;http://www.onshape.com&lt;/a&gt; 團隊決定自 2012 年開始, 利用這些相關技術 (結合 Javascript V8 與 NoSQL) 打造一套全瀏覽器的雲端電腦輔助機械設計軟體.&lt;/p&gt;
&lt;p&gt;Onshpae 的推出, 終於讓二十一世紀的機械設計工程師感受到平版與手機時代的到來, 面對全球無縫整合的產品開發流程, 任何人都可以隨時隨地在有網路連線的地方, 用任何裝置參與協同.&lt;/p&gt;
&lt;p&gt;Onshape 的可貴, 不僅解決協同產品開發團隊間, 軟體版次分歧與維護的問題, 而且徹底改變過去產品生命週期管理上, MCAD (Mechanical Computer Aided Design) 軟體套件無法全雲端運作, 所帶來的簽出入時間差異困擾, 讓協同團隊人員, 能夠即時線上協同, 關注同一份設計資料 ,而且整個團隊, 在特定的產品設計專案上, 每個零件與組立圖, 在不同的工作屬性下, 保證只有一份資料.&lt;/p&gt;
&lt;p&gt;在此同時, Onshape 團隊也意識到全球自造時代 (Self-manufacturing Era) 將會是二十一世紀最重要的產品設計開發模式之一, 因此套件公開推出時, 允許使用者透過免費方案, 將設計內容公開者, 就可以擁有 5GB 的容量空間, 相信此舉會讓過去數以百萬計的標準零件庫迅速納入旗下, 成為全球各方人員搭配組合新產品的重要來源之一.&lt;/p&gt;
&lt;p&gt;尤有甚者, 全雲端全瀏覽器的 MCAD, 將會帶動隨後全球各類 CAX 應用的虛實整合與平行分散運算, 讓網路上閒置的運算資源降到最低.&lt;/p&gt;
&lt;p&gt;總而言之, Onshape 的推出, 讓沉悶已久的電腦輔助機械設計界, 重新看到新的契機, 全球協同產品開發不再只是口號, 相信過去幾十年來作威作福的半調子 MCAD &amp;amp; PLM 套件開發者與代理商, 可以深刻記取教訓, 因為真正屬於二十一世紀的電腦輔助機械設計軟體, 已經來了.&lt;/p&gt;</summary><category term="MCAD"></category><category term="CAD"></category></entry><entry><title>Onshape Tutorial</title><link href="http://chiamingyen.github.io/kmolsite/blog/onshape-tutorial.html" rel="alternate"></link><updated>2015-12-23T22:39:08+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2015-12-23:kmolsite/blog/onshape-tutorial.html</id><summary type="html">&lt;p&gt;Onshape 導引&lt;/p&gt;


&lt;p&gt;Onshape: &lt;a href="http://www.onshape.com"&gt;http://www.onshape.com&lt;/a&gt; 是一套可以完全在瀏覽器, 平板與手機中操作的電腦輔助機械設計繪圖軟體 (Mechanical Computer Aided Design, MCAD).&lt;/p&gt;
&lt;p&gt;Onshape 所使用的技術環境包括 Parasolid: &lt;a href="https://en.wikipedia.org/wiki/Parasolid"&gt;https://en.wikipedia.org/wiki/Parasolid&lt;/a&gt;, Javascript V8: &lt;a href="https://github.com/v8/v8"&gt;https://github.com/v8/v8&lt;/a&gt;, WebGL, NoSQL 以及快速的網路連線 (&lt;a href="http://www.worldcadaccess.com/blog/2015/10/all-about-the-drafting-component-in-onshape.html"&gt;ref&lt;/a&gt;).&lt;/p&gt;
&lt;h1&gt;Onshape 文件檔案概念&lt;/h1&gt;
&lt;p&gt;Onshape 將設計專案中的各式檔案全部集中在一起, 而且在 Document 列表中, 只以一個 Workspace 檔案來代表這一群檔案, 且透過 Tab 來表示零件, 組立, 工程圖或其他從外部 import 進來的各種檔案.&lt;/p&gt;
&lt;p&gt;另外, 一旦某一 Workspace 檔案透過分享, 允許其他用戶編輯後, 所有俱備權限檢視或編輯此一工作空間的用戶, 都使用相同的單一工作空間檔案, 而且在各用戶編輯零件或組立文件時, 每一個動作均會自動儲存歷史紀錄.&lt;/p&gt;
&lt;p&gt;Onshape 組立約束:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fastened Mate - 固結接合 - 兩零件緊固結合後, 彼此結為一體, 相互之間沒有自由度.&lt;/li&gt;
&lt;li&gt;Revolute Mate - 旋轉接合 -  兩零件旋轉接合後, 只剩下一個沿 Z 軸旋轉的自由度.&lt;/li&gt;
&lt;li&gt;Slider Mate - 滑動接合 - 兩零件滑動接合後, 只剩下一個沿 Z 軸平移的自由度.&lt;/li&gt;
&lt;li&gt;Planar Mate - 面接合 - 兩零件面接合後, 剩下在配接平面上 X, Y 方向自由移動, 而且可以延 Z 方向自由旋轉, 因此剩下 3 個自由度.&lt;/li&gt;
&lt;li&gt;Cylindrical Mate - 圓柱接合 - 兩零件圓柱接合後, 剩下沿著 Z 軸移動以及轉動等 2 個自由度.&lt;/li&gt;
&lt;li&gt;Pin Slot Mate - 銷槽接合 - 兩零件銷槽接合後, 剩下延 X 方向移動, 且可以沿 Z 軸方向旋轉, 因此剩下 2 自由度.&lt;/li&gt;
&lt;li&gt;Ball Mate - 球接合 - 兩零件球接合後, 剩下三軸方向的 3 個旋轉自由度.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Onshape 的組立約束與一般單機上的 MCAD 有些許差異, 只能分別透過兩兩約束的堆疊來定義組立.&lt;/p&gt;
&lt;h1&gt;Onshape 基本使用流程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;登入後點選左方 My documents 下的 Created by me, 然後可以再透過左上方的 Create 或 import documents file(s) 建立檔案或從近端上傳檔案.&lt;/li&gt;
&lt;li&gt;選擇 Create document 後, 可以決定要建立 private 或 public 類別的檔案, 在免費帳號下, 使用者至多可以建立 10 個 private 檔案, 總容量 100 MB 以內, 若選擇建立 public 類別檔案, 則無檔案個數限制, 但總容量必須在 5GB 以內.&lt;/li&gt;
&lt;li&gt;進入 Create public 檔案後, 可以透過左下方的 + 號, 選擇建立 Part Studio, Assembly, Drawing 或從近端 import 檔案.&lt;/li&gt;
&lt;li&gt;Part Studio 就是零件繪製模組, Assembly 就是零件組立, Drawing 就是零件工程圖, 而 import 檔案可以讓使用者從外部上傳各式檔案或零組件檔案.&lt;/li&gt;
&lt;li&gt;Part Studio 採 history based 方式建立特徵, 起始繪圖時, 必須先選擇 Create new sketch 後, 再選擇繪圖平面, 之後的額外功能選擇, 可以利用滑鼠右鍵帶出, 其中包括 View normal to sketch plane, 假如是在平版 App 環境, 則必須利用兩指張開, 同時點擊畫面帶出此一設定功能視窗, 而且在平版必須透過連續輕敲觸控螢幕來取消先前的各式點擊選擇.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Onshape 協同設計 (&lt;a href="https://www.onshape.com/cad-blog/under-the-hood-collaboration"&gt;ref&lt;/a&gt;)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在每一個 Workspace 列表中的最右方, 使用者可以利用滑鼠帶出相關功能, 其中 Share 功能, 可以將特定的 Workspace 分享設定給其他用戶, 由於 Onshape 將所有資料都存在雲端, 因此特定 Workspace 的協同設計都同步儲存在對應的 History 與 Version 資料中, 也就是各參與協同用戶可以透過工作空間的 Share, 進行各資料的同步編輯 (simultaneous editing).&lt;/li&gt;
&lt;li&gt;進入特定 Workspace 的 Version 功能設定時 (或從 Version Manager 進入管理), 參與協同的設計者, 可以利用特定版本的最右方功能, 從先前所儲存的版本中, 選擇 Branch to create workspace, 建立"分支" 工作空間, 並且在這些"分支"空間中, 增加新的內容, 並且可以在隨後的時間點將分支合併到其他版本內容空間中, 這時建立分支的用戶便可以在不影響主要分支版本的進程中, 執行平行式的分支編輯 (branched editing).&lt;/li&gt;
&lt;li&gt;因為 Onshape 提供工作空間切出分支的功能, 當兩個分支要執行合併時, 系統解決衝突的過程, 將以原始分支的內容為主(&lt;a href="https://www.onshape.com/cad-blog/merging-branches-in-onshape"&gt;ref1&lt;/a&gt;, &lt;a href="https://cad.onshape.com/help/Content/merge.htm"&gt;ref2&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Onshape 各版本的屬性設定, 包括名稱 (Name), 類別 (Type), 說明 (Description), 零件編號 (Part number), 版本 (Revision) 與狀態 (State), 而狀態可以包括進行中 (In progress), 待定 (Pending), 已發行 (Released) 以及已過時 (Obsolete), 換言之, 雲端協同模式下的 Onshape 先天已經俱備基本的 PDM 與 PLM 的功能, 相信隨後的 CAE, CAM, ERP 或 MRP 等對應功能, 將會透過 API 的架構逐一由第3方協力商釋放出來.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CAD"></category></entry></feed>