<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>kmolsite</title><link href="http://chiamingyen.github.io/kmolsite/blog/" rel="alternate"></link><link href="http://chiamingyen.github.io/kmolsite/blog/feeds/ubuntu.atom.xml" rel="self"></link><id>http://chiamingyen.github.io/kmolsite/blog/</id><updated>2015-12-20T20:21:54+08:00</updated><entry><title>rattleCAD on Ubuntu</title><link href="http://chiamingyen.github.io/kmolsite/blog/posts/2015/12/20/rattlecad-on-ubuntu/" rel="alternate"></link><updated>2015-12-20T20:21:54+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2015-12-20:kmolsite/blog/posts/2015/12/20/rattlecad-on-ubuntu/</id><summary type="html">&lt;p&gt;在 Ubuntu 環境中執行 rattleCAD&lt;/p&gt;


&lt;p&gt;&lt;a href="http://rattlecad.sourceforge.net/"&gt;http://rattlecad.sourceforge.net/&lt;/a&gt; 是以 TCL 編寫的, 在 Windows 下載 rattleCAD, 會有一個 rattlecad.exe, 可以直接執行, 但是在 Ubuntu 環境中, 就必須要透過 tclsh rattleCAD.tcl 才能執行, 只是在 Ubuntu 14.04 中缺少了 tdom 與 BWidget 模組, 必須補安裝後, rattleCAD 才能正確執行.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install tdom BWidget
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="tclsh"></category><category term="rattlecad"></category></entry><entry><title>Ubuntu 14.04 執行 Python 網際程式</title><link href="http://chiamingyen.github.io/kmolsite/blog/posts/2015/12/16/ubuntu-1404-zhi-xing-python-wang-ji-cheng-shi/" rel="alternate"></link><updated>2015-12-16T21:14:38+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2015-12-16:kmolsite/blog/posts/2015/12/16/ubuntu-1404-zhi-xing-python-wang-ji-cheng-shi/</id><summary type="html">&lt;p&gt;Nginx 當前端, 在 Ubuntu 以 uwsgi 執行 Python 程式.&lt;/p&gt;


&lt;p&gt;nginx.conf 設定&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;user www-data;
worker_processes &lt;span class="m"&gt;4&lt;/span&gt;;
pid &lt;span class="n"&gt;/run/nginx.pid;&lt;/span&gt;

events {
    worker_connections &lt;span class="m"&gt;768&lt;/span&gt;;
    # multi_accept &lt;span class="k"&gt;on&lt;/span&gt;;
}

http {

    ##
    # Basic Settings
    ##

    sendfile &lt;span class="k"&gt;on&lt;/span&gt;;
    tcp_nopush &lt;span class="k"&gt;on&lt;/span&gt;;
    tcp_nodelay &lt;span class="k"&gt;on&lt;/span&gt;;
    keepalive_timeout &lt;span class="m"&gt;65&lt;/span&gt;;
    types_hash_max_size &lt;span class="m"&gt;2048&lt;/span&gt;;
    # server_tokens &lt;span class="k"&gt;off&lt;/span&gt;;

    # server_names_hash_bucket_size &lt;span class="m"&gt;64&lt;/span&gt;;
    # server_name_in_redirect &lt;span class="k"&gt;off&lt;/span&gt;;

    include &lt;span class="n"&gt;/etc/nginx/mime.types;&lt;/span&gt;
    default_type application&lt;span class="n"&gt;/octet-stream;&lt;/span&gt;

    ##
    # Logging Settings
    ##

    access_log &lt;span class="n"&gt;/var/log/nginx/access.log;&lt;/span&gt;
    error_log &lt;span class="n"&gt;/var/log/nginx/error.log;&lt;/span&gt;

    ##
    # Gzip Settings
    ##

    gzip &lt;span class="k"&gt;on&lt;/span&gt;;
    gzip_disable &lt;span class="s2"&gt;&amp;quot;msie6&amp;quot;&lt;/span&gt;;

    # gzip_vary &lt;span class="k"&gt;on&lt;/span&gt;;
    # gzip_proxied any;
    # gzip_comp_level &lt;span class="m"&gt;6&lt;/span&gt;;
    # gzip_buffers &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;k;
    # gzip_http_version &lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="m"&gt;1&lt;/span&gt;;
    # gzip_types text&lt;span class="n"&gt;/plain&lt;/span&gt; text&lt;span class="n"&gt;/css&lt;/span&gt; application&lt;span class="n"&gt;/json&lt;/span&gt; application&lt;span class="n"&gt;/x-javascript&lt;/span&gt; text&lt;span class="n"&gt;/xml&lt;/span&gt; application&lt;span class="n"&gt;/xml&lt;/span&gt; application&lt;span class="n"&gt;/xml+rss&lt;/span&gt; text&lt;span class="n"&gt;/javascript;&lt;/span&gt;

    ##
    # nginx-naxsi config
    ##
    # Uncomment it &lt;span class="k"&gt;if&lt;/span&gt; you installed nginx-naxsi
    ##

    #include &lt;span class="n"&gt;/etc/nginx/naxsi_core.rules;&lt;/span&gt;

    ##
    # nginx-passenger config
    ##
    # Uncomment it &lt;span class="k"&gt;if&lt;/span&gt; you installed nginx-passenger
    ##

    #passenger_root &lt;span class="n"&gt;/usr;&lt;/span&gt;
    #passenger_ruby &lt;span class="n"&gt;/usr/bin/ruby;&lt;/span&gt;

    ##
    # Virtual Host Configs
    ##

    include &lt;span class="n"&gt;/etc/nginx/conf.d/*.conf;&lt;/span&gt;
    include &lt;span class="n"&gt;/etc/nginx/sites-enabled/*;&lt;/span&gt;
}


#mail {
#   # See sample authentication script at:
#   # http:&lt;span class="n"&gt;//wiki.nginx.org/ImapAuthenticateWithApachePhpScript&lt;/span&gt;
# 
#   # auth_http localhost&lt;span class="n"&gt;/auth.php;&lt;/span&gt;
#   # pop&lt;span class="m"&gt;3&lt;/span&gt;_capabilities &lt;span class="s2"&gt;&amp;quot;TOP&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;USER&amp;quot;&lt;/span&gt;;
#   # imap_capabilities &lt;span class="s2"&gt;&amp;quot;IMAP4rev1&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UIDPLUS&amp;quot;&lt;/span&gt;;
# 
#   server {
#       listen     localhost:110;
#       protocol   pop&lt;span class="m"&gt;3&lt;/span&gt;;
#       proxy      &lt;span class="k"&gt;on&lt;/span&gt;;
#   }
# 
#   server {
#       listen     localhost:143;
#       protocol   imap;
#       proxy      &lt;span class="k"&gt;on&lt;/span&gt;;
#   }
#}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
72 行中的 include /etc/nginx/sites-enabled/*; 表示導入 sites-enabled 中的所有設定檔.&lt;/p&gt;
&lt;p&gt;而 sites-enabled 中只有一個 default 指向 sites-available/default, 所以隨後的設定都以 sites-available/default 檔案為主&lt;/p&gt;
&lt;p&gt;sites-availables/default 設定檔案:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="n"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="n"&gt;default_server&lt;/span&gt; &lt;span class="n"&gt;ipv6only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;443&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt; &lt;span class="n"&gt;ipv6only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;alias&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hp3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cmsimply&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wsgi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;uwsgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;uwsgi_pass&lt;/span&gt;  &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;server_name&lt;/span&gt; &lt;span class="nt"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nf"&gt;#ssl&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_certificate&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.crt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.key&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_session_timeout&lt;/span&gt; &lt;span class="nt"&gt;5m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_protocols&lt;/span&gt; &lt;span class="nt"&gt;SSLv3&lt;/span&gt; &lt;span class="nt"&gt;TLSv1&lt;/span&gt; &lt;span class="nt"&gt;TLSv1&lt;/span&gt;&lt;span class="nc"&gt;.1&lt;/span&gt; &lt;span class="nt"&gt;TLSv1&lt;/span&gt;&lt;span class="nc"&gt;.2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;try_files&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;404&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
其中第 13 行 include uwsgi_params;, 表示 uwsgi_params 檔案必須位於與 default 設定檔案同一個目錄, 也就是必須位於 sites-available 目錄中.&lt;/p&gt;
&lt;p&gt;第 14 行 uwsgi_pass  127.0.0.1:8080; 表示 uwsgi 伺服傳送是透過近端主機中的 8080 埠號傳資料給 nginx, 然後再由 nginx 透過埠號 80 與 443 進行全球資訊網伺服, 因此用戶無法直接擷取 uwsgi 所傳出的資料, 而是經過內部 8080 傳給 nginx 後再以 http 或 https 與請求連線的客戶端進行互動.&lt;/p&gt;
&lt;p&gt;uwsgi_params 檔案內容:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;uwsgi_param QUERY_STRING &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;query_string&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param REQUEST_METHOD &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;request_method&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param CONTENT_TYPE &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;content_type&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param CONTENT_LENGTH &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;content_length&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param REQUEST_URI &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;request_uri&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param PATH_INFO &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;document_uri&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param DOCUMENT_ROOT &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;document_root&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param SERVER_PROTOCOL &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;server_protocol&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param REMOTE_ADDR &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;remote_addr&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param REMOTE_PORT &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;remote_port&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param SERVER_ADDR &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;server_addr&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param SERVER_PORT &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;server_port&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;span class="x"&gt;uwsgi_param SERVER_NAME &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;server_name&lt;/span&gt;&lt;span class="x"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
處理好 nginx 設定之後, 接著處理 uwsgi 的啟動, 希望在開機時就交由操作系統啟動, 這裡透過 /etc/init/uwsgi.conf 設定完成.&lt;/p&gt;
&lt;p&gt;/etc/init/uwsgi.conf 檔案內容:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;description &amp;quot;uwsgi Emperor&amp;quot;
start on runlevel [2345]
stop on runlevel [06]

respawn

exec uwsgi --uid hp3 --gid hp3 --emperor /home/hp3/uwsgi_ini
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
以上採用 uwsgi Emperor 的設定方式啟動 /home/hp3/uwsgi_ini 目錄中的所有 uwsgi 程式啟動.&lt;/p&gt;
&lt;p&gt;而目前位於 /home/hp3/uwsgi_ini 目錄中只有一個 uwsgi.ini  檔案, 內容如下:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;:8080&lt;/span&gt;
&lt;span class="na"&gt;processes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4&lt;/span&gt;
&lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/home/hp3/cmsimply/wsgi&lt;/span&gt;
&lt;span class="na"&gt;wsgi-file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/home/hp3/cmsimply/wsgi/application&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
表示要以近端的 8080 埠號啟動 uwsgi, 而且設定執行目錄與執行的 uwsgi 應用程式 /home/hp3/cmsimply/wsgi/application&lt;/p&gt;
&lt;p&gt;這時很重要的一點就是 application 必須採 uwsgi 啟動設定, 也就是與 OpenShift 端的啟動方式相同.&lt;/p&gt;
&lt;p&gt;/home/hp3/cmsimply/wsgi/application 最後啟動設定為:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;if inOpenshift:
    # operate in OpenShift
    application = cherrypy.Application(root, config = application_conf)
else:
    # operate in localhost
    #cherrypy.server.socket_port = 8080
    #cherrypy.server.socket_host = &amp;#39;XXX.XXX.17.103&amp;#39;
    #cherrypy.quickstart(root, config = application_conf)
    application = cherrypy.Application(root, config = application_conf)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="網際程式"></category><category term="Python"></category><category term="nginx"></category><category term="uwsgi"></category></entry><entry><title>nginx 與 uwsgi 的結合</title><link href="http://chiamingyen.github.io/kmolsite/blog/posts/2015/12/16/nginx-yu-uwsgi-de-jie-he/" rel="alternate"></link><updated>2015-12-16T21:02:42+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2015-12-16:kmolsite/blog/posts/2015/12/16/nginx-yu-uwsgi-de-jie-he/</id><summary type="html">&lt;p&gt;最新版的 nginx 必須與 2.0 版以上的 uwsgi 配合, 否則無法啟動.&lt;/p&gt;


&lt;p&gt;這是發生在編號 103 HP 伺服器上的問題, 透過查驗, 才知道, 其實在各種協同合作模式中, 必須了解細節才能解決問題.&lt;/p&gt;
&lt;p&gt;2015.11.03 情況: IPV4 與 IPV6 都可以 SSH, 因此從遠端進入, 開始尋找為何 nginx 與 uwsgi 無法正常結合運作.&lt;/p&gt;
&lt;p&gt;首先新增管理者用戶:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo adduser username
sudo visudo
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
將 username 納為可以執行 sudo 的帳號&lt;/p&gt;
&lt;p&gt;在 %sudo 行下增加一行,  然後按下 Ctrl+O, 再按 Enter&lt;/p&gt;
&lt;p&gt;經過 uwsgi 版次查驗, 發現透過 sudo apt-get install uwsgi 所安裝的版本為 1.9.17.1 版, 必須設法轉為 2.0 以上版本&lt;/p&gt;
&lt;p&gt;版本查驗:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;uwsgi --version
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
結果為 1.9.17.1-debian, 必須改為 2.0.11.2, 否則無法與 nginx 結合&lt;/p&gt;
&lt;p&gt;移除利用 sudo apt-get install uwsgi 安裝的 1.9.17.1 版的 uswgi&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get remove uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
準備利用 pip3 安裝 uwsgi 其中必須執行 c 程式編譯, 因此必須安裝 build-essential 與 python3-dev&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install build-essential python3-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
接著利用 pip3 安裝 uwsgi&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo pip3 install uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
利用 which uwsgi 找到 2.0.11.2 版的 uwsgi 位於 /usr/local/bin/uwsgi&lt;/p&gt;
&lt;p&gt;因為 /etc/alternatives/uwsgi 指向 /usr/bin/uwsgi-core 為舊版, 因此必須重新設定 symbolic link, 讓 uwsgi 指令指到 2.0 版本.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;cd /etc/alternatives
sudo rm uwsgi (刪除舊的 symbolic link)
sudo ln -s /usr/local/bin/uwsgi uwsgi (將新的 /usr/local/bin/uwsgi 對應到 uwsgi)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
完成後執行:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo service uwsgi restart 
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
就可順利啟動 nginx 中所對應設定的 CMSimply&lt;/p&gt;</summary><category term="uwsgi"></category><category term="nginx"></category><category term="網際程式"></category><category term="Python"></category></entry></feed>