<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<?xml-stylesheet ekr_test ?>
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="leo.20151212173315.1"><vh>@settings</vh>
<v t="leo.20151212173315.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="leo.20151212173315.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="leo.20151213173811.1" a="E"><vh>假如要送到 gh-pages 分支, 使用下列按鈕</vh>
<v t="leo.20151212173658.1"><vh>@button gh-pages pelican</vh></v>
</v>
<v t="leo.20151213173830.1" a="E"><vh>假如要在近端檢視, 使用下列按鈕</vh>
<v t="leo.20151213085727.1"><vh>@button local pelican</vh></v>
</v>
<v t="amd.20151215180106.1" a="E"><vh>設定與開發</vh>
<v t="leo.20151213230723.1"><vh>Pelican 設定</vh>
<v t="leo.20151213230957.1"><vh>文章 Date 設定</vh></v>
<v t="leo.20151213230729.1"><vh>使用 summary plugin</vh></v>
</v>
<v t="amd.20151215170117.1"><vh>以下 pellicanconf.py 為近端與遠端的共同設定</vh></v>
<v t="leo.20151212173725.1"><vh>@edit pelicanconf.py</vh></v>
<v t="amd.20151215170142.1"><vh>以下 publishconf.py 為遠端所使用的設定</vh></v>
<v t="leo.20151212173803.1"><vh>@edit publishconf.py</vh></v>
<v t="amd.20151215170221.1"><vh>以下 local_publishconf.py 為近端所使用的設定</vh></v>
<v t="leo.20151213085752.1"><vh>@edit local_publishconf.py</vh></v>
<v t="amd.20151215121740.1" a="E"><vh>@path theme</vh>
<v t="amd.20151215164330.1" a="E"><vh>Tipue Search 程式碼</vh>
<v t="amd.20151215164348.1" a="E"><vh>@path tipuesearch</vh>
<v t="amd.20151215164443.1"><vh>@edit tipuesearch_set.js</vh></v>
<v t="amd.20151215164405.1"><vh>@edit tipuesearch.js</vh></v>
<v t="amd.20151215165242.1"><vh>@edit tipuesearch.min.js</vh></v>
</v>
</v>
<v t="amd.20151215121758.1" a="E"><vh>@path pelican-bootstrap3</vh>
<v t="amd.20151215121816.1" a="E"><vh>@path templates</vh>
<v t="amd.20151215121827.1"><vh>@edit base.html</vh></v>
<v t="amd.20151215121849.1"><vh>@edit search.html</vh></v>
<v t="amd.20151215152634.1"><vh>@edit tags.html</vh></v>
</v>
</v>
<v t="amd.20151215154950.1" a="E"><vh>@path pelican-bootstrap3_local</vh>
<v t="amd.20151215154950.2" a="E"><vh>@path templates</vh>
<v t="amd.20151215154950.3"><vh>@edit base.html</vh></v>
<v t="amd.20151215154950.4"><vh>@edit search.html</vh></v>
<v t="amd.20151215162536.1" a="E"><vh>@path includes</vh>
<v t="amd.20151215162510.1"><vh>@edit sidebar.html</vh></v>
</v>
<v t="amd.20151215154950.5"><vh>@edit tags.html</vh></v>
</v>
</v>
</v>
<v t="amd.20151215170248.1"><vh>以下的 json 與 js 檔案為 Tipue search contents</vh></v>
<v t="amd.20151215155650.1"><vh>@edit tipuesearch_content.json</vh></v>
<v t="amd.20151215155533.1"><vh>@edit tipuesearch_content.js</vh></v>
<v t="amd.20151215170326.1"><vh>以下在修改或查驗 plugin 目錄下的檔案</vh></v>
<v t="amd.20151215154225.1"><vh>@path plugin</vh>
<v t="amd.20151215154238.1" a="E"><vh>@path tipue_search</vh>
<v t="amd.20151215154248.1"><vh>@edit tipue_search.py</vh></v>
</v>
</v>
</v>
<v t="amd.20151215170350.1"><vh>以下為 content 目錄中的 md 檔案</vh></v>
<v t="amd.20151216001126.1"><vh>md 檔案範例</vh></v>
<v t="amd.20151215170031.1" a="E"><vh>@path content</vh>
<v t="amd.20151215180414.1" a="E"><vh>201512 文章</vh>
<v t="amd.20151215170031.2"><vh>@edit 20151212.md</vh></v>
<v t="amd.20151215170031.3"><vh>@edit 20151212-1.md</vh></v>
<v t="amd.20151215170031.4"><vh>@edit 20151213.md</vh></v>
<v t="amd.20151215170031.5"><vh>@edit 20151213-1.md</vh></v>
<v t="amd.20151215170031.6"><vh>@edit 20151213-2.md</vh></v>
<v t="amd.20151216001255.1"><vh>@edit 20151216.md</vh></v>
</v>
<v t="amd.20151215180504.1"><vh>201601文章</vh></v>
</v>
</vnodes>
<tnodes>
<t tx="amd.20151215121740.1"></t>
<t tx="amd.20151215121758.1"></t>
<t tx="amd.20151215121816.1"></t>
<t tx="amd.20151215154225.1"></t>
<t tx="amd.20151215154238.1"></t>
<t tx="amd.20151215154950.1"></t>
<t tx="amd.20151215154950.2"></t>
<t tx="amd.20151215155533.1">@language javascript
var tipuesearch = {"pages":[{"text":"可以啟動, 也能夠檢視沒有 Slug 設定的情況, 是否可以使用中文檔案名稱 以下利用 Brython 語法, 在網頁繪圖: 使用方法: http://www.brython.info/ window.onload=function(){ brython(1); } # 導入 doc from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"plotarea\"] ctx = canvas.getContext(\"2d\") # 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點 # ctx.setTransform(1, 0, 0, -1, 0, canvas.height) # 以下採用 canvas 原始座標繪圖 flag_w = canvas.width flag_h = canvas.height circle_x = flag_w/4 circle_y = flag_h/4 # 先畫滿地紅 ctx.fillStyle='rgb(255, 0, 0)' ctx.fillRect(0,0,flag_w,flag_h) # 再畫青天 ctx.fillStyle='rgb(0, 0, 150)' ctx.fillRect(0,0,flag_w/2,flag_h/2) # 畫十二道光芒白日 ctx.beginPath() star_radius = flag_w/8 angle = 0 for i in range(24): angle += 5*math.pi*2/12 toX = circle_x + math.cos(angle)*star_radius toY = circle_y + math.sin(angle)*star_radius # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo if (i): ctx.lineTo(toX, toY) else: ctx.moveTo(toX, toY) ctx.closePath() # 將填色設為白色 ctx.fillStyle = '#fff' ctx.fill() # 白日:藍圈 ctx.beginPath() ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True) ctx.closePath() # 填色設為藍色 ctx.fillStyle = 'rgb(0, 0, 149)' ctx.fill() # 白日:白心 ctx.beginPath() ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True) ctx.closePath() # 填色設為白色 ctx.fillStyle = '#fff' ctx.fill()","tags":"kmol","url":"/2016kmol-ce-shi.html","title":"2016kmol 測試"},{"text":"https://github.com/chiamingyen/kmol2016 是一個 Windows 64 位元環境下的可攜程式系統. 製作步驟如下: 選擇安裝 Python 3.4.4, 原因為 Python 3.5 與 PyQt5 必須自行編譯, 為了簡化, 選擇 Python 3.4.4, 並且使用現成的 PyQt5-5.5.1-gpl-Py3.4-Qt5.5.1-x64.exe 安裝 Python 3.4.4 時, 故意不要安裝 pip, 隨後再透過 get-pip.py 以手動安裝. 安裝 pip 後, 再利用 Leo Editor 原始碼安裝, 同時利用 pip 安裝 pelican Markdown Flask","tags":"kmol","url":"/2016kmol-initialized.html","title":"2016kmol initialized"},{"text":"Pelican 近端與遠端的設定 為了讓 Pelican 在近端產生靜態網頁後, 可以直接在近端瀏覽器中查驗, 因此必須在第一時間, 以近端設定, 若查驗無誤, 再轉換設定為遠端絕對目錄的設定, 重新再建立一次網頁內容. 這樣的配置雖然不方便, 但是為了讓 disqus 留言系統可以正常運作, 必須要採取此一設定流程.","tags":"Pelican","url":"/pelican-jin-duan-yu-yuan-duan-de-she-ding.html","title":"Pelican 近端與遠端的設定"},{"text":"刪除近端與遠端的 Git 分支 To delete a local branch git branch -D the_local_branch To remove a remote branch git push origin :the_remote_branch or git push origin --delete the_remote_branch","tags":"Git","url":"/remove-local-and-remote-branch.html","title":"Remove local and remote branch"},{"text":"Pelican 靜態網站關鍵字搜尋 https://github.com/getpelican/pelican-plugins/tree/master/tipue_search Tipue Search requires BeautifulSoup. pip install beautifulsoup4","tags":"Pelican","url":"/tipue-site-search-for-pelican.html","title":"Tipue Site Search for Pelican"}]};</t>
<t tx="amd.20151215155650.1">@nocolor
{"pages":[{"text":"可以啟動, 也能夠檢視沒有 Slug 設定的情況, 是否可以使用中文檔案名稱 以下利用 Brython 語法, 在網頁繪圖: 使用方法: http://www.brython.info/ window.onload=function(){ brython(1); } # 導入 doc from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"plotarea\"] ctx = canvas.getContext(\"2d\") # 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點 # ctx.setTransform(1, 0, 0, -1, 0, canvas.height) # 以下採用 canvas 原始座標繪圖 flag_w = canvas.width flag_h = canvas.height circle_x = flag_w/4 circle_y = flag_h/4 # 先畫滿地紅 ctx.fillStyle='rgb(255, 0, 0)' ctx.fillRect(0,0,flag_w,flag_h) # 再畫青天 ctx.fillStyle='rgb(0, 0, 150)' ctx.fillRect(0,0,flag_w/2,flag_h/2) # 畫十二道光芒白日 ctx.beginPath() star_radius = flag_w/8 angle = 0 for i in range(24): angle += 5*math.pi*2/12 toX = circle_x + math.cos(angle)*star_radius toY = circle_y + math.sin(angle)*star_radius # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo if (i): ctx.lineTo(toX, toY) else: ctx.moveTo(toX, toY) ctx.closePath() # 將填色設為白色 ctx.fillStyle = '#fff' ctx.fill() # 白日:藍圈 ctx.beginPath() ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True) ctx.closePath() # 填色設為藍色 ctx.fillStyle = 'rgb(0, 0, 149)' ctx.fill() # 白日:白心 ctx.beginPath() ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True) ctx.closePath() # 填色設為白色 ctx.fillStyle = '#fff' ctx.fill()","tags":"kmol","url":"/2016kmol-ce-shi.html","title":"2016kmol 測試"},{"text":"https://github.com/chiamingyen/kmol2016 是一個 Windows 64 位元環境下的可攜程式系統. 製作步驟如下: 選擇安裝 Python 3.4.4, 原因為 Python 3.5 與 PyQt5 必須自行編譯, 為了簡化, 選擇 Python 3.4.4, 並且使用現成的 PyQt5-5.5.1-gpl-Py3.4-Qt5.5.1-x64.exe 安裝 Python 3.4.4 時, 故意不要安裝 pip, 隨後再透過 get-pip.py 以手動安裝. 安裝 pip 後, 再利用 Leo Editor 原始碼安裝, 同時利用 pip 安裝 pelican Markdown Flask","tags":"kmol","url":"/2016kmol-initialized.html","title":"2016kmol initialized"},{"text":"Pelican 近端與遠端的設定 為了讓 Pelican 在近端產生靜態網頁後, 可以直接在近端瀏覽器中查驗, 因此必須在第一時間, 以近端設定, 若查驗無誤, 再轉換設定為遠端絕對目錄的設定, 重新再建立一次網頁內容. 這樣的配置雖然不方便, 但是為了讓 disqus 留言系統可以正常運作, 必須要採取此一設定流程.","tags":"Pelican","url":"/pelican-jin-duan-yu-yuan-duan-de-she-ding.html","title":"Pelican 近端與遠端的設定"},{"text":"刪除近端與遠端的 Git 分支 To delete a local branch git branch -D the_local_branch To remove a remote branch git push origin :the_remote_branch or git push origin --delete the_remote_branch","tags":"Git","url":"/remove-local-and-remote-branch.html","title":"Remove local and remote branch"},{"text":"Pelican 靜態網站關鍵字搜尋 https://github.com/getpelican/pelican-plugins/tree/master/tipue_search Tipue Search requires BeautifulSoup. pip install beautifulsoup4","tags":"Pelican","url":"/tipue-site-search-for-pelican.html","title":"Tipue Site Search for Pelican"}]}</t>
<t tx="amd.20151215162536.1"></t>
<t tx="amd.20151215164330.1"></t>
<t tx="amd.20151215164348.1"></t>
<t tx="amd.20151215170031.1"></t>
<t tx="amd.20151215170117.1"></t>
<t tx="amd.20151215170142.1"></t>
<t tx="amd.20151215170221.1"></t>
<t tx="amd.20151215170248.1"></t>
<t tx="amd.20151215170326.1"></t>
<t tx="amd.20151215170350.1"></t>
<t tx="amd.20151215180106.1"></t>
<t tx="amd.20151215180414.1"></t>
<t tx="amd.20151215180504.1"></t>
<t tx="amd.20151216001126.1">@language md
Title: 文章標題
Category: 類別
Tags: 標籤
Author: kmol

這裡放入文章摘要

&lt;!-- PELICAN_END_SUMMARY --&gt;

這裡為文章主要內容</t>
<t tx="leo.20151212173315.1"></t>
<t tx="leo.20151212173315.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="leo.20151212173315.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="leo.20151212173658.1">@language python
import os
#os.system("pelican content -o ./ -s publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o ./ -s publishconf.py")
g.es("admin pelican 執行完畢")

</t>
<t tx="leo.20151213085727.1">@language python
import os
#os.system("pelican content -o ./ -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o ./ -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="leo.20151213173811.1"></t>
<t tx="leo.20151213173830.1"></t>
<t tx="leo.20151213230723.1"></t>
<t tx="leo.20151213230729.1">利用

&lt;!-- PELICAN_END_SUMMARY --&gt;

來界定 Summary 摘要內容

前提, 必須設定 

PLUGIN_PATHS = ['plugin']

與

PLUGINS = ['liquid_tags.notebook', 'summary']

並且從 https://github.com/getpelican/pelican-plugins

取得 summary plugin</t>
<t tx="leo.20151213230957.1"># 設定網誌以 md 檔案建立的 file system date 為準, 無需自行設定

DEFAULT_DATE = 'fs'</t>
</tnodes>
</leo_file>
